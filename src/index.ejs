<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=0"/>
    <title></title>
    <% if (htmlWebpackPlugin.options.nodeModules) { %>
    <!-- Add `node_modules/` to global paths so `require` works properly in development -->
    <script>
      require('module').globalPaths.push('<%= htmlWebpackPlugin.options.nodeModules.replace(/\\/g, '\\\\') %>')
    </script>
    <% } %>
</head>

<body>
<div class="full-button" id="fullbtn">
    <span class="btn-p1"><i></i></span>
    <span class="btn-p2"><i></i></span>
    <span class="btn-p3"><i></i></span>
</div>
<script>

  const electron = require('electron')
  let win = electron.remote.getCurrentWindow()
  let sp1 = document.querySelector('.btn-p1')
  let sp2 = document.querySelector('.btn-p2')
  let sp3 = document.querySelector('.btn-p3')
  if (process.platform === 'darwin') {
    sp1.addEventListener('click', () => closewin())
    sp2.addEventListener('click', () => minimize())
    sp3.addEventListener('click', () => maximize())
  } else {
    let dom = document.getElementById('fullbtn')
    dom.removeAttribute('class', 'full-button')
    dom.setAttribute('class', 'full-win-btn')
    sp1.addEventListener('click', () => minimize())
    sp2.addEventListener('click', () => maximize())
    sp3.addEventListener('click', () => closewin())
  }

  function closewin () {
    if (win.id > 1) win.close()
    if (confirm('确定要关闭吗？'))
      win.close()
  }
  function minimize () {
    win.minimize()
  }
  function maximize () {
    if (process.platform === 'darwin') {
      if (win.isFullScreen())
        win.setFullScreen(false)
      else
        win.setFullScreen(true)
    } else {
      if (win.isMaximized())
        win.unmaximize()
      else
        win.maximize()
    }
  }


</script>
<div id="app"></div>
<!-- Set `__static` path to static files in production -->
<script>
  if (process.env.NODE_ENV !== 'development') window.__static = require('path').join(__dirname, '/static').replace(/\\/g, '\\\\')
</script>

<!-- webpack builds are automatically injected -->
</body>
</html>
